[versions]
kotlin = "2.2.10"
dokka = "2.0.0"
serialization = "1.8.0"
ktor = "3.2.3"
exposed = "1.0.0-beta-5"

koin = "4.1.0"

shadow = "9.0.0-beta15"

adventure = "4.17.0"
paper = "1.21.8-R0.1-SNAPSHOT"
bstats  = "3.0.2"

mock = "2.3.1"

twitch4j = "1.25.0"

[libraries]
# KOTLIN
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", name = "kotlin-stdlib", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin", name = "kotlin-reflect" }
kotlin-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version = "0.7.1", name = "kotlin-datetime" }
kotlin-atomicfu = { module = "org.jetbrains.kotlinx:atomicfu", version = "0.29.0", name = "kotlin-atomicfu" }
kotlin-coroutine = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version = "1.10.2", name = "kotlin-coroutine" }


# KTOR
ktor-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor", name = "ktor-client-serialization" }

ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor", name = "ktor-client-core" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor", name = "ktor-client-cio" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor", name = "ktor-client-content-negotiation" }

ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor", name = "ktor-server-core" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor", name = "ktor-server-netty" }
ktor-server-double-receive = { module = "io.ktor:ktor-server-double-receive", version.ref = "ktor", name = "ktor-server-double-receive" }


# EXPOSED
exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed", name = "exposed-core" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed", name = "exposed-jdbc" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed", name = "exposed-dao" }


# SERIALIZATION
serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }
serialization-hocon = { module = "org.jetbrains.kotlinx:kotlinx-serialization-hocon", version.ref = "serialization" }


# KOIN
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin", name = "koin-core" }


# MINECRAFT
adventure = { module = "net.kyori:adventure-api", version.ref = "adventure" }
paper = { module = "io.papermc.paper:paper-api", version.ref = "paper" }
bstats = { module = "org.bstats:bstats-bukkit", version.ref = "bstats" }


# TWITCH4J :)
twitch4j = { module = "com.github.twitch4j:twitch4j", version.ref = "twitch4j", name = "twitch4j" }


# PLUGINS
shadow = { module = "com.gradleup.shadow:shadow-gradle-plugin", version.ref = "shadow" }
kotlin-dokka = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version.ref = "dokka" }
kotlin-gradle = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-jvm = { module = "org.jetbrains.kotlin.jvm:org.jetbrains.kotlin.jvm.gradle.plugin", version.ref = "kotlin" }
kotlin-serialization = { module = "org.jetbrains.kotlin.plugin.serialization:org.jetbrains.kotlin.plugin.serialization.gradle.plugin", version.ref = "serialization" }
paper-mock = { module = "xyz.jpenilla.run-paper:xyz.jpenilla.run-paper.gradle.plugin", version.ref = "mock" }


[bundles]
kotlin = ["kotlin-stdlib", "kotlin-reflect", "kotlin-datetime", "kotlin-atomicfu", "kotlin-coroutine"]
ktor-server = ["ktor-server-core", "ktor-server-netty", "ktor-server-double-receive"]
ktor-client = ["ktor-client-core", "ktor-client-cio", "ktor-serialization", "ktor-client-content-negotiation"]
serialization = ["serialization-json", "serialization-hocon"]
exposed = ["exposed-core", "exposed-jdbc", "exposed-dao"]
